[build-system]
requires = [
  "hatchling>=1.27.0",
  "cmake>=4.0.3",
  "grpcio-tools>=1.73.1",
  "mypy-protobuf>=3.6.0",
  "typing_extensions>=4.14.1; python_version < '3.12'",
]
build-backend = "hatchling.build"

[project]
name = "axserve"
dynamic = ["version"]
description = "AxServe python client that provides interfaces of COM or OCX components through a gRPC server."
readme = "README.md"
requires-python = ">=3.10"
license = "Apache-2.0"
keywords = ["activex", "com", "ocx", "windows", "grpc", "qt6", "cpp", "python"]
authors = [{ name = "Yunseong Hwang", email = "kika1492@gmail.com" }]
maintainers = [{ name = "Yunseong Hwang", email = "kika1492@gmail.com" }]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: Microsoft :: Windows :: Windows 11",
  "Programming Language :: C++",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Environment :: Console",
  "Environment :: X11 Applications :: Qt",
]
dependencies = [
  "click>=8.2.1",
  "grpcio>=1.73.1",
  "protobuf>=6.31.1",
  "wrapt>=1.17.2",
  "pywin32>=311; platform_system == 'Windows'",
  "typing_extensions>=4.14.1; python_version < '3.12'",
]

[project.urls]
Documentation = "https://github.com/elbakramer/axserve#readme"
Issues = "https://github.com/elbakramer/axserve/issues"
Source = "https://github.com/elbakramer/axserve"

[project.scripts]
axserve = "axserve.cli:main"

[tool.hatch.version]
path = "src/python/axserve/__about__.py"

[tool.hatch.build]
packages = ["src/python/axserve"]
exclude = ["third_party"]
skip-excluded-dirs = true

[tool.hatch.build.targets.wheel]
artifacts = ["src/python/**/*.exe"]

[tool.hatch.build.targets.wheel.hooks.custom]
path = "hatch_build.py"

[[tool.hatch.build.targets.wheel.hooks.custom.generates]]
sources = ["src/proto/active.proto"]
include-dirs = ["src/proto"]
out-dir = "src/python/axserve/proto"

[[tool.hatch.build.targets.wheel.hooks.custom.builds]]
build-dir = "build/amd64"
generator = "Ninja Multi-Config"
config = "Release"
system-processor = "AMD64"
toolchain = "cmake/msvc/toolchain-msvc.cmake"
runtime-output-dir = "src/python/axserve/server/exe"
output-files = ["src/python/axserve/server/exe/axserve-console-amd64.exe"]
marker = "platform_system == 'Windows' and platform_machine == 'AMD64'"

[[tool.hatch.build.targets.wheel.hooks.custom.builds]]
build-dir = "build/x86"
generator = "Ninja Multi-Config"
config = "Release"
system-processor = "x86"
toolchain = "cmake/msvc/toolchain-msvc.cmake"
runtime-output-dir = "src/python/axserve/server/exe"
output-files = ["src/python/axserve/server/exe/axserve-console-x86.exe"]
marker = "platform_system == 'Windows' and (platform_machine == 'AMD64' or platform_machine == 'x86')"

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.default]
dependencies = ["reuse>=5.0.2", "bump-my-version>=1.2.1"]

[tool.hatch.envs.default.scripts]
bump-version = "bump-my-version bump {args:patch}"
add-license = 'reuse annotate --template copyright --copyright "Yunseong Hwang" --license Apache-2.0 --year 2025 --recursive --skip-unrecognised {args:src}'

[tool.hatch.envs.test]
dependencies = [
  "pytest>=8.4.1",
  "pytest-cov>=6.2.1",
  "pytest-asyncio>=1.1.0",
  "coverage[toml]>=7.10.1",
]

[tool.hatch.envs.test.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["coverage combine", "coverage xml", "coverage report"]
cov = ["test-cov", "cov-report"]

[tool.hatch.envs.lint]
dependencies = ["ruff>=0.12.7", "mypy>=1.17.1", "reuse>=5.0.2"]
detached = true

[tool.hatch.envs.lint.scripts]
check = "ruff check {args:.}"
check-fix = "ruff check --fix {args:.}"
format = "ruff format {args:.}"
typing = "mypy --install-types --non-interactive {args:src/python/axserve tests}"
license = "reuse lint"
all = ["check-fix", "format", "typing", "license"]

[tool.hatch.envs.doc]
dependencies = []

[tool.codespell]
skip = "third_party"
ignore-words-list = "doubleclick"

[tool.ruff]
extend-exclude = [
  "third_party",
  "typings",
  "**/*_pb2.py",
  "**/*_pb2.pyi",
  "**/*_pb2_grpc.py",
  "**/*_pb2_grpc.pyi",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D1",
  "PTH123",
  "ANN",
  "C90",
  "PLR09",
  "F403",
  "TID252",
  "COM",
  "SLF001",
  "TRY201",
  "RET504",
  "PGH003",
  "TC006",
]

[tool.ruff.lint.isort]
known-first-party = ["axserve"]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"src/python/axserve/cli/__init__.py" = ["PLC0415"]
"tests/**/*" = ["PLR2004", "S101", "TID252", "PLC0415"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
files = ["src/python/axserve", "tests"]
exclude = ["_pb2\\.py$", "_pb2\\.pyi$", "_pb2_grpc\\.py$", "_pb2_grpc\\.pyi$"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.pyright]
exclude = ["build", "dist", "third_party"]

[tool.coverage.run]
source_pkgs = ["axserve", "tests"]
branch = true
parallel = true
omit = ["src/python/axserve/__about__.py"]

[tool.coverage.paths]
axserve = ["src/python/axserve"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
